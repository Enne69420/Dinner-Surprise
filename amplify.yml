version: 2
# AWS Amplify Gen 2 Configuration
frontend:
  phases:
    preBuild:
      commands:
        - 'npm ci'
        # Create environment file for Next.js with public variables
        - 'touch .env.local'
        - 'echo "NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL" >> .env.local'
        - 'echo "NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL" >> .env.local'
        - 'echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY" >> .env.local'
        - 'echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=$NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY" >> .env.local'
        - 'echo "NEXT_PUBLIC_PRICE_ID_PREMIUM_MONTHLY=$NEXT_PUBLIC_PRICE_ID_PREMIUM_MONTHLY" >> .env.local'
        - 'echo "NEXT_PUBLIC_PRICE_ID_PREMIUM_YEARLY=$NEXT_PUBLIC_PRICE_ID_PREMIUM_YEARLY" >> .env.local'
        - 'echo "NEXT_PUBLIC_AWS_REGION=$AWS_REGION" >> .env.local'
        - 'echo "NEXT_PUBLIC_API_ENDPOINT=$NEXT_PUBLIC_API_ENDPOINT" >> .env.local'
        
        # Directly access secrets from SSM Parameter Store using app ID
        - |
          # Get secrets from SSM Parameter Store
          echo "Retrieving secrets for App ID dyapawq5wdyx3..."
          SUPABASE_SERVICE_ROLE_KEY=$(aws ssm get-parameter --name "/amplify/dyapawq5wdyx3/SUPABASE_SERVICE_ROLE_KEY" --with-decryption --query Parameter.Value --output text 2>/dev/null || echo "")
          STRIPE_SECRET_KEY=$(aws ssm get-parameter --name "/amplify/dyapawq5wdyx3/STRIPE_SECRET_KEY" --with-decryption --query Parameter.Value --output text 2>/dev/null || echo "")
          STRIPE_WEBHOOK_SECRET=$(aws ssm get-parameter --name "/amplify/dyapawq5wdyx3/STRIPE_WEBHOOK_SECRET" --with-decryption --query Parameter.Value --output text 2>/dev/null || echo "")
          DEEPSEEK_API_KEY=$(aws ssm get-parameter --name "/amplify/dyapawq5wdyx3/DEEPSEEK_API_KEY" --with-decryption --query Parameter.Value --output text 2>/dev/null || echo "")
          
          # Write secrets to .env.local if found
          if [ ! -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
            echo "SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_ROLE_KEY" >> .env.local
            echo "Successfully retrieved SUPABASE_SERVICE_ROLE_KEY"
          else
            echo "WARNING: Failed to retrieve SUPABASE_SERVICE_ROLE_KEY"
          fi
          
          if [ ! -z "$STRIPE_SECRET_KEY" ]; then
            echo "STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY" >> .env.local
            echo "Successfully retrieved STRIPE_SECRET_KEY"
          else
            echo "WARNING: Failed to retrieve STRIPE_SECRET_KEY"
          fi
          
          if [ ! -z "$STRIPE_WEBHOOK_SECRET" ]; then
            echo "STRIPE_WEBHOOK_SECRET=$STRIPE_WEBHOOK_SECRET" >> .env.local
            echo "Successfully retrieved STRIPE_WEBHOOK_SECRET"
          else
            echo "WARNING: Failed to retrieve STRIPE_WEBHOOK_SECRET"
          fi
          
          if [ ! -z "$DEEPSEEK_API_KEY" ]; then
            echo "DEEPSEEK_API_KEY=$DEEPSEEK_API_KEY" >> .env.local
            echo "Successfully retrieved DEEPSEEK_API_KEY"
          else
            echo "WARNING: Failed to retrieve DEEPSEEK_API_KEY"
          fi
        
        # Debug: Check if variables exist (no values shown for security)
        - 'echo "Environment variables presence check:"'
        - 'echo "NEXT_PUBLIC_SUPABASE_URL: $(if [ ! -z \"$NEXT_PUBLIC_SUPABASE_URL\" ]; then echo YES; else echo NO; fi)"'
        - 'echo "NEXT_PUBLIC_SUPABASE_ANON_KEY: $(if [ ! -z \"$NEXT_PUBLIC_SUPABASE_ANON_KEY\" ]; then echo YES; else echo NO; fi)"'
        - 'echo "SUPABASE_SERVICE_ROLE_KEY: $(if [ ! -z \"$SUPABASE_SERVICE_ROLE_KEY\" ]; then echo YES; else echo NO; fi)"'

        - 'echo "Environment file created for frontend build"'
    build:
      commands:
        - 'npm run build'
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*

# Simple backend config that doesn't try to use Amplify CLI
backend:
  phases:
    build:
      commands:
        - 'echo "Using App ID: dyapawq5wdyx3 in region: us-east-1"'
        - 'echo "Environment: main"'
        - 'echo "Skipping backend deployment - using existing resources"'

# Lambda function configuration with all required environment variables
function:
  - name: "dinnerSurpriseFunction"
    runtime: "nodejs18.x"
    handler: "src/index.handler"
    environment:
      variables:
        NODE_ENV: "production"
        # For Lambda functions, Amplify Gen 2 will automatically inject secrets
        # These references will be resolved at deployment time
        SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
        STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
        STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
        DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}