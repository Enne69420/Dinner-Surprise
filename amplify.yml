version: 2
# AWS Amplify Gen 2 Configuration
frontend:
  phases:
    preBuild:
      commands:
        - 'npm ci'
        # Create environment file for Next.js
        - 'touch .env.local'
        - 'echo "NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL" >> .env.local'
        - 'echo "NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL" >> .env.local'
        - 'echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY" >> .env.local'
        - 'echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=$NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY" >> .env.local'
        - 'echo "NEXT_PUBLIC_PRICE_ID_PREMIUM_MONTHLY=$NEXT_PUBLIC_PRICE_ID_PREMIUM_MONTHLY" >> .env.local'
        - 'echo "NEXT_PUBLIC_PRICE_ID_PREMIUM_YEARLY=$NEXT_PUBLIC_PRICE_ID_PREMIUM_YEARLY" >> .env.local'
        - 'echo "NEXT_PUBLIC_AWS_REGION=$AWS_REGION" >> .env.local'
        - 'echo "NEXT_PUBLIC_API_ENDPOINT=$NEXT_PUBLIC_API_ENDPOINT" >> .env.local'
        # Add server-side environment variables (non-Next.js prefixed vars are server-side only)
        - 'echo "STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}" >> .env.local'
        - 'echo "STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}" >> .env.local'
        - 'echo "DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}" >> .env.local'
        - 'echo "SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}" >> .env.local'
        # Try to directly access SSM parameters if Environment Variables aren't working
        - |
          if [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
            echo "SUPABASE_SERVICE_ROLE_KEY not found in environment, attempting to get from SSM..."
            # Try to get from SSM directly (make sure IAM permissions are set)
            export SSM_SUPABASE_KEY=$(aws ssm get-parameter --name "/amplify/dyapawq5wdyx3/main/SUPABASE_SERVICE_ROLE_KEY" --with-decryption --query "Parameter.Value" --output text 2>/dev/null || echo "")
            if [ ! -z "$SSM_SUPABASE_KEY" ]; then
              echo "Successfully retrieved SUPABASE_SERVICE_ROLE_KEY from SSM"
              echo "SUPABASE_SERVICE_ROLE_KEY=$SSM_SUPABASE_KEY" >> .env.local
            else
              echo "Failed to retrieve SUPABASE_SERVICE_ROLE_KEY from SSM"
            fi
          fi
        # Debug: Check if SUPABASE variables exist (no values shown for security)
        - 'echo "Checking environment variables presence:"' 
        - 'echo "NEXT_PUBLIC_SUPABASE_URL exists: $(if [ ! -z \"$NEXT_PUBLIC_SUPABASE_URL\" ]; then echo YES; else echo NO; fi)"'
        - 'echo "SUPABASE_SERVICE_ROLE_KEY exists: $(if [ ! -z \"$SUPABASE_SERVICE_ROLE_KEY\" ]; then echo YES; else echo NO; fi)"'
        # Safely show the environment file without revealing secrets
        - 'echo "Environment file created for frontend build"'
    build:
      commands:
        - 'npm run build'
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*

# Simple backend config that doesn't try to use Amplify CLI
backend:
  phases:
    build:
      commands:
        - 'echo "Using App ID: d2odppyr9yu5gf in region: us-east-1"'
        - 'echo "Environment: main"'
        - 'echo "Skipping backend deployment - using existing resources"'

# Lambda function configuration with all required environment variables
function:
  - name: "dinnerSurpriseFunction"
    runtime: "nodejs18.x"
    handler: "src/index.handler"
    environment:
      variables:
        NODE_ENV: "production"
        # Add direct references to environment variables from Amplify console
        STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
        STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
        DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
        SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}